Index: src/ForwardSchedulerSvc.h
===================================================================
--- src/ForwardSchedulerSvc.h	(revision 7911)
+++ src/ForwardSchedulerSvc.h	(working copy)
@@ -93,6 +93,8 @@
   /// Blocks until an event is availble
   virtual StatusCode popFinishedEvent(EventContext*& eventContext);
 
+  virtual StatusCode BENBENBEN( std::string AlgName, EventContext* eventContext );
+
   /// Try to fetch an event from the scheduler
   virtual StatusCode tryPopFinishedEvent(EventContext*& eventContext);
 
Index: src/SequentialSchedulerSvc.h
===================================================================
--- src/SequentialSchedulerSvc.h	(revision 7911)
+++ src/SequentialSchedulerSvc.h	(working copy)
@@ -54,8 +54,10 @@
   virtual StatusCode pushNewEvents(std::vector<EventContext*>& eventContexts);
   
   /// Blocks until an event is availble
-  virtual StatusCode popFinishedEvent(EventContext*& eventContext);  
+  virtual StatusCode popFinishedEvent(EventContext*& eventContext);
 
+  virtual StatusCode BENBENBEN( std::string AlgName, EventContext* eventContext ){ return StatusCode::FAILURE; };
+
   /// Try to fetch an event from the scheduler
   virtual StatusCode tryPopFinishedEvent(EventContext*& eventContext);  
 
Index: src/RoundRobinSchedulerSvc.h
===================================================================
--- src/RoundRobinSchedulerSvc.h	(revision 7911)
+++ src/RoundRobinSchedulerSvc.h	(working copy)
@@ -59,6 +59,8 @@
   /// Blocks until an event is availble
   virtual StatusCode popFinishedEvent(EventContext*& eventContext);
 
+  virtual StatusCode BENBENBEN( std::string AlgName, EventContext* eventContext ){ return StatusCode::FAILURE; };
+
   /// Try to fetch an event from the scheduler
   virtual StatusCode tryPopFinishedEvent(EventContext*& eventContext);
 
Index: src/ParallelSequentialSchedulerSvc.h
===================================================================
--- src/ParallelSequentialSchedulerSvc.h	(revision 7911)
+++ src/ParallelSequentialSchedulerSvc.h	(working copy)
@@ -61,6 +61,8 @@
   /// Blocks until an event is availble
   virtual StatusCode popFinishedEvent(EventContext*& eventContext);
 
+  virtual StatusCode BENBENBEN( std::string AlgName, EventContext* eventContext ){ return StatusCode::FAILURE; };
+
   /// Try to fetch an event from the scheduler
   virtual StatusCode tryPopFinishedEvent(EventContext*& eventContext);
 
Index: src/ForwardSchedulerSvc.cpp
===================================================================
--- src/ForwardSchedulerSvc.cpp	(revision 7911)
+++ src/ForwardSchedulerSvc.cpp	(working copy)
@@ -1073,5 +1073,34 @@
   std::cout << ost.str();
 
 }
-    
- 
+
+//BEN
+StatusCode ForwardSchedulerSvc::BENBENBEN( std::string AlgName, EventContext* eventContext )
+{
+	unsigned int iAlgo = this->algname2index( AlgName );
+	IAlgorithm * ialgoPtr = nullptr;
+	StatusCode sc = m_algResourcePool->acquireAlgorithm( AlgName,ialgoPtr );
+	if ( sc.isSuccess() )
+	{
+		Algorithm * algoPtr = dynamic_cast< Algorithm* >( ialgoPtr );
+		if ( !eventContext )
+		{
+			fatal() << "Event context for algorithm " << AlgName << " is a nullptr (slot 0)" << endmsg;
+		}
+
+		algoPtr->setContext( eventContext );
+		++m_algosInFlight;
+		tbb::task * t = new( tbb::task::allocate_root() )AlgoExecutionTask( ialgoPtr, iAlgo, serviceLocator(), this );
+		tbb::task::enqueue( *t );
+
+		info() << "BEN directly queued " << AlgName << endmsg;
+	}
+	else
+	{
+		info() << "BEN could not acquire " << AlgName << endmsg;
+	}
+
+	sc = m_algResourcePool->releaseAlgorithm( AlgName,ialgoPtr );
+	info() << "BEN attempted to release algorithm: " << sc << endmsg;
+	return sc;
+}

